1. Login to AWS

2. Create IAM user for deployment

     with specific access

     1. EC2 access : It is virtual machine

     2. S3 bucket: To store artifact and model in s3 bucket

     3. ECR: Elastic container registry to save you docker image in aws

        TO save your docket image in aws


     Description of deployment

     1. Build docket image of the source code
     2. Push you docker image to ECR
     3. Launch your EC2
     4. Pull you Image from ECR in EC2
     5. Launch your docker image in EC2


     policy:
     1. AmazonEC2FullAccess
     2.AmazonEC2ContainerRegistryFullAccess
     3.AmazonS3FullAccess


3. Create a s3 bucket in ap-south-1
    bucket name: baalti_sensor

4. ECR repo to store/save docker image
    905418099613.dkr.ecr.ap-south-1.amazonaws.com        /sensorlive

5. EC2 machine ubuntu Created


6. Open Ec2 and Install docket in EC2 Machine

    #optional
    sudo apt-get update -y
    sudo apt-get upgrade

    #required
    curl-fsSL https://get.docker.com -o get-docket.sh
    sudo sh get-docker.sh
    sudo usermod -aG docket ubuntu
    newgrp docker


7. COnfigure EC2 as self-hosted rumor

setting > actions >runner > new self hosted runner > choose os>
then run command one by one

8. Setup github secrets

    AWS_ACCESS_KEY_ID=

    AWS_SECRET_ACCESS_KEY=

    AWS_REGION= ap-south-1

    AWS_ECR_LOGIN_URI = 905418099613.dkr.ecr.ap-south-1.amazonaws.com

    ECR_REPOSITORY_NAME = sensorlive




    MONGO_DB_URL = 'mongodb+srv://prabhakarkumar313:9571002370@cluster0.kztw6.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0'


